version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    container_name: go_app
    depends_on:
      db:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
    environment:
      - PORT=8080
      - DB_HOST=db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=users_db
      - DB_PORT=5432
      - LOG_LEVEL=info
    networks:
      - app-network
      - monitoring-network

  migrate:
    build:
      context: .
      dockerfile: Dockerfile.migrate
    container_name: migrate
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DB_HOST=db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=users_db
      - DB_PORT=5432
    networks:
      - app-network

  db:
    image: postgres:latest
    container_name: postgres_db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=users_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
  monitoring-network:
    external: true

volumes:
  postgres_data:
    driver: local